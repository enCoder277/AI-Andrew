import asyncio
import ollama
import logging
from decouple import config
from elevenlabs import save
from elevenlabs.client import ElevenLabs
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import FSInputFile, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters.command import Command

logging.basicConfig(level=logging.INFO)
BOT_TOKEN = config('TELEGRAM_BOT_TOKEN')
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    description = (
        "‚ú® –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞! ‚ú®\n\n"
        "üí¨ –ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º.\n"
        "ü§ñ –ò—Å–ø–æ–ª—å–∑—É—é –ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞—Ö–æ–¥–∏—Ç—å —Ä–µ—à–µ–Ω–∏—è, –¥–µ–ª–∏—Ç—å—Å—è –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –ø—Ä–æ—Å—Ç–æ "
        "–¥–µ–ª–∞—Ç—å —Ç–≤–æ–π –¥–µ–Ω—å —á—É—Ç–æ—á–∫—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ!\n\n"
        "–î–∞–≤–∞–π –ø–æ–≥–æ–≤–æ—Ä–∏–º! –í –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–≤–µ—Ç—ã? üòä"
    )
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–¢–ï–ö–°–¢", callback_data="command_text")],
            [InlineKeyboardButton(text="–ê–£–î–ò–û", callback_data="command_audio")]
        ]
    )
    await message.answer(description, reply_markup=kb)

@dp.callback_query()
async def process_callback(callback_query: types.CallbackQuery):
    if callback_query.data == "command_text":
        await text_example(callback_query.message)

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ Telegram –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω
    await bot.answer_callback_query(callback_query.id)



@dp.message(Command("text"))
async def text_example(message: types.Message):
    await message.answer("—Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")





async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())